# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: SpringBoot CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Create env file
      working-directory: ./server
      run: |
        touch .env
        cat << EOF >> .env
        ${{ secrets.ENV }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
    - name: Zip builded source file
      run: zip -r cicd-test.zip .
    - name: AWS configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./cicd-test.zip s3://eltov-cicd-bucket/public/
    - name: Deploy with AWS CodeDeploy
      run: aws deploy create-deployment
        --application-name eltov_code_deploy
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name test-deploy
        --s3-location bucket=eltov-cicd-bucket,bundleType=zip,key=public/cicd-test.zip
